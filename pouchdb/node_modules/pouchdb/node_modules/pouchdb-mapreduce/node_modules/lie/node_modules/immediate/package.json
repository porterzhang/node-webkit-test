{
  "name": "immediate",
  "description": "A polyfill for the setImmediate efficient script yielding API",
  "version": "2.6.1",
  "contributors": [
    {
      "name": "Domenic Denicola",
      "email": "domenic@domenicdenicola.com",
      "url": "http://domenicdenicola.com"
    },
    {
      "name": "Donavon West",
      "email": "github@donavon.com",
      "url": "http://donavon.com"
    },
    {
      "name": "Yaffle"
    },
    {
      "name": "Calvin Metcalf",
      "email": "calvin.metcalf@gmail.com"
    }
  ],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/calvinmetcalf/immediate.git"
  },
  "browser": {
    "./lib/nextTick.js": "./lib/fakeNextTick.js"
  },
  "bugs": {
    "url": "https://github.com/calvinmetcalf/immediate/issues"
  },
  "main": "lib/index.js",
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "http-server": "~0.5.3",
    "opener": "~1.3",
    "grunt-contrib-uglify": "~0.2.4",
    "grunt": "~0.4.1",
    "browserify": "~2.35.0",
    "grunt-browserify": "~1.2.9",
    "grunt-contrib-connect": "~0.5.0",
    "grunt-saucelabs": "~4.1.2",
    "grunt-contrib-jshint": "~0.7.0",
    "mocha": "~1.13.0",
    "grunt-cli": "~0.1.9"
  },
  "jam": {
    "main": "dist/immediate.js"
  },
  "readme": "\n\n## Introduction\n\n**immediate.js** is a cross between [NobleJS's setImmediate](https://github.com/NobleJS/setImmediate), [Cujo's When](https://github.com/cujojs/when), and [RSVP][RSVP].\n\nimmediate takes the tricks from setImmedate and RSVP and combines them with the schedualer from when to make a low latency polyfill.\n\n## The Tricks\n\n### `process.nextTick`\n\nIn Node.js versions below 0.9, `setImmediate` is not available, but [`process.nextTick`][nextTIck] is, so we use it to\nshim support for a global `setImmediate`. In Node.js 0.9 and above, `setImmediate` is available.\n\nNote that we check for *actual* Node.js environments, not emulated ones like those produced by browserify or similar.\nSuch emulated environments often already include a `process.nextTick` shim that's not as browser-compatible as\nsetImmediate.js.\n\n### `MutationObserver`\n\nThis is what [RSVP][RSVP] uses, it's very fast, details on [MDN](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver)\n\n### `postMessage`\n\nIn Firefox 3+, Internet Explorer 9+, all modern WebKit browsers, and Opera 9.5+, [`postMessage`][postMessage] is\navailable and provides a good way to queue tasks on the event loop. It's quite the abuse, using a cross-document\nmessaging protocol within the same document simply to get access to the event loop task queue, but until there are\nnative implementations, this is the best option.\n\nNote that Internet Explorer 8 includes a synchronous version of `postMessage`. We detect this, or any other such\nsynchronous implementation, and fall back to another trick.\n\n### `MessageChannel`\n\nUnfortunately, `postMessage` has completely different semantics inside web workers, and so cannot be used there. So we\nturn to [`MessageChannel`][MessageChannel], which has worse browser support, but does work inside a web worker.\n\n### `<script> onreadystatechange`\n\nFor our last trick, we pull something out to make things fast in Internet Explorer versions 6 through 8: namely,\ncreating a `<script>` element and firing our calls in its `onreadystatechange` event. This does execute in a future\nturn of the event loop, and is also faster than `setTimeout(â€¦, 0)`, so hey, why not?\n\n## Usage\n\nIn the browser, include it with a `<script>` tag; pretty simple. Creates a global\ncalled `immediate` which should act like setImmediate. It also has a method called\n`clear` which should act like `clearImmediate`.\n\nIn Node.js, do\n\n```\nnpm install immediate\n```\n\nthen\n\n```js\nvar immediate = require(\"immediate\");\n```\n\nsomewhere early in your app; it attaches to the global.\n\n \n## Reference and Reading\n\n * [Efficient Script Yielding W3C Editor's Draft][spec]\n * [W3C mailing list post introducing the specification][list-post]\n * [IE Test Drive demo][ie-demo]\n * [Introductory blog post by Nicholas C. Zakas][ncz]\n * I wrote a couple blog pots on this, [part 1][my-blog-1] and [part 2][my-blog-2]\n\n[RSVP]: https://github.com/tildeio/rsvp.js\n[spec]: https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/setImmediate/Overview.html\n[list-post]: http://lists.w3.org/Archives/Public/public-web-perf/2011Jun/0100.html\n[ie-demo]: http://ie.microsoft.com/testdrive/Performance/setImmediateSorting/Default.html\n[ncz]: http://www.nczonline.net/blog/2011/09/19/script-yielding-with-setimmediate/\n[nextTick]: http://nodejs.org/docs/v0.8.16/api/process.html#process_process_nexttick_callback\n[postMessage]: http://www.whatwg.org/specs/web-apps/current-work/multipage/web-messaging.html#posting-messages\n[MessageChannel]: http://www.whatwg.org/specs/web-apps/current-work/multipage/web-messaging.html#channel-messaging\n[cross-browser-demo]: http://calvinmetcalf.github.io/setImmediate-shim-demo\n[my-blog-1]:http://calvinmetcalf.com/post/61672207151/setimmediate-etc\n[my-blog-2]:http://calvinmetcalf.com/post/61761231881/javascript-schedulers",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/calvinmetcalf/immediate",
  "_id": "immediate@2.6.1",
  "_from": "immediate@~2.6.1"
}
